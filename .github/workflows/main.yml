name: Build and Deploy to Azure Container App

on:
  push:
    branches:
      - main

env:
  REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  CONTAINER_APP_NAME: ${{ secrets.CONTAINER_APP_NAME }}
  IMAGE_NAME: ${{ secrets.AZURE_IMAGE_NAME }}
  ACR_LOGIN_SERVER: ${{ secrets.REGISTRY_NAME }}.azurecr.io

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Login to Azure using service principal credentials
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ env.REGISTRY_NAME }}

      # Step 4: Build the frontend (ignore ESLint warnings as errors)
      - name: Build Frontend (React)
        run: |
          npm ci
          CI=false npm run build

      # Step 5: Build and push Docker image to Azure Container Registry
      - name: Build and Push Docker image
        run: |
          docker build -t $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker push $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Step 6: Deploy the new image to Azure Container App
      - name: Deploy to Azure Container App
        run: |
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --query properties.configuration.ingress.fqdn
