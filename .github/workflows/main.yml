name: Build and Deploy to Azure Container App

on:
  push:
    branches:
      - main

env:
  ACR_NAME: frontendacr01
  ACR_LOGIN_SERVER: frontendacr01.azurecr.io
  RESOURCE_GROUP: frontend_rg
  CONTAINER_APP_NAME: frontend-app
  IMAGE_NAME: frontend-code

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Log in to Azure
      - name: 🔐 Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to Azure Container Registry
      - name: 🗝️ Log in to Azure Container Registry
        run: az acr login --name ${{ env.ACR_NAME }}

      # Step 4: Install dependencies and build React app
      - name: ⚙️ Install dependencies and build
        run: |
          echo "🔧 Installing dependencies..."
          npm ci
          echo "🏗️ Building production build..."
          CI=false npm run build   # 👈 Prevent ESLint warnings from breaking the build

      # Step 5: Debug workspace (useful for checking Docker context)
      - name: 🧩 Debug workspace
        run: |
          echo "🏗️ Working directory: $(pwd)"
          echo "📂 Files available:"
          ls -la

      # Step 6: Build and push Docker image
      - name: 🐳 Build and push Docker image to ACR
        run: |
          echo "🚀 Building Docker image..."
          docker build -t $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker tag $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${{ github.sha }} $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:latest
          echo "📤 Pushing image to ACR..."
          docker push $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:latest

      # Step 7: Deploy to Azure Container App
      - name: 🚀 Deploy to Azure Container App
        run: |
          echo "🚀 Deploying latest image to Azure Container App..."
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:latest \
            --query properties.configuration.ingress.fqdn
